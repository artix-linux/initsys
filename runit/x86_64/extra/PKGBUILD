# Maintainer: Chris Cromer <chris@cromer.cl>
# Maintainer: Muhammad Herdiansyah <koni@artixlinux.org>

_url=https://gitea.artixlinux.org/artix/runit-artix
_pkgname=runit-artix
_pkgver=20210904

# set default service path to /run/runit/service
_servicedir=/run/runit/service

pkgname=runit
pkgver=2.1.2
pkgrel=29
pkgdesc='a cross-platform Unix init scheme with service supervision'
arch=('x86_64')
url='http://smarden.org/runit/'
license=('BSD')
depends=('runit-rc')
makedepends=('git')
optdepends=('runit-bash-completions: Runit completions for Bash')
install=runit.install
provides=('svc-manager' 'eudev-runit')
conflicts=('svc-manager' 'eudev-runit')
replaces=('eudev-runit')
source=("http://smarden.org/${pkgname}/${pkgname}-${pkgver}.tar.gz"
        "${_pkgname}-${_pkgver}.tar.gz::${_url}/archive/${_pkgver}.tar.gz"
        "halt.c"
        "shutdown"
        "clearmem.patch"
        "svlogd.patch"
        "utmpset-time_t.patch"
        "runit-hook"
        "runit-install.hook"
        "runit-remove.hook"
        "30-binfmt.hook"
        "30-sysctl.hook")
sha256sums=('6fd0160cb0cf1207de4e66754b6d39750cff14bb0aa66ab49490992c0c47ba18'
            '7dd9b8967b8944daf3d077c52264827a660598097d5e0a631d0f33d20c9d127f'
            'a9e4b3e09fb72fd44e62f052fd2302d6fcde64a112d53037febd221564e62b1a'
            '7f11c5cab16f10178612b6a81d37184c25c4426b9c2d5d3f8ef7ed7ab2b52c56'
            '19b5e99135f153d07052f2dff707430af9faeabc717a5740ea58a8a783f609de'
            '9cf269264c0713975be1b3bc9dd3b5b3bb1e2078ac596527370a902d8d025a5a'
            '527f68f501cc9eb4bbab33f8ad374822624342c7d74b5c795efe4aac6b3f170a'
            '201cf7e03d400195c461face4ec29559bbfe3308e6d291a7633a9d1632e99410'
            'a3e95c60b616ae0a85690d0251924b084f85166cfbd7c037377cfe67b3baaf1b'
            'b85ae57b50a323fd5b11c3584b1b34f723b38d769ea238ab3c27429f2f4fb7b9'
            '3248e86fe739aaff412f5b4f77b689f690fac1c0e9e634a0305cc3f517d41338'
            'af91ca198fc402f39faf9e62b8da56e47f5cda9ce3d61c43fcf5b24f59fbbf5a')

prepare() {
	# set default service path to /run/runit/service
	cd "${srcdir}/admin/${pkgname}-${pkgver}"
	sed -i "s|/service/|${_servicedir}/|" src/sv.c

	# apply patches
	patch -p1 -i "${srcdir}/clearmem.patch"
	patch -p1 -i "${srcdir}/svlogd.patch"
	patch -p1 -i "${srcdir}/utmpset-time_t.patch"
}

build() {
	cc ${CFLAGS} halt.c -o halt ${LDFLAGS}

	cd ${_pkgname}
	make SERVICEDIR="${_servicedir}"

	cd "${srcdir}/admin/${pkgname}-${pkgver}"

	CFLAGS="${CFLAGS} -static"
	LDFLAGS="${LDFLAGS} -static"

	package/compile

}

check() {
	cd "${srcdir}/admin/${pkgname}-${pkgver}"
	package/check
}

package() {
	# commands
	install -dm755 "${pkgdir}/usr/bin"
	install -Dm755 ${srcdir}/admin/${pkgname}-${pkgver}/command/* "${pkgdir}/usr/bin"
	install -Dm755 ${srcdir}/halt ${pkgdir}/usr/bin/halt
	ln -s halt ${pkgdir}/usr/bin/poweroff
	ln -s halt ${pkgdir}/usr/bin/reboot
	install -Dm755 ${srcdir}/shutdown ${pkgdir}/usr/bin/shutdown

	cd ${_pkgname}
	make DESTDIR="${pkgdir}" PREFIX="/usr" SERVICEDIR="${_servicedir}" install-runit

	# man pages
	install -dm755 "${pkgdir}/usr/share/man/man8"
	install -Dm644 ${srcdir}/admin/${pkgname}-${pkgver}/man/* "${pkgdir}/usr/share/man/man8"

	# alpm hooks
	install -Dm755 "${srcdir}/runit-hook" "${pkgdir}/usr/share/libalpm/scripts/runit-hook"
	install -Dm644 -t "${pkgdir}/usr/share/libalpm/hooks" "${srcdir}"/*.hook

	# license
	install -dm755 ${pkgdir}/usr/share/licenses/${pkgname}
	install -Dm644 "${srcdir}/admin/${pkgname}-${pkgver}/package/COPYING" ${pkgdir}/usr/share/licenses/${pkgname}/COPYING
	sed -n '/To the extent/,/0/p' README.md > "${pkgdir}"/usr/share/licenses/${pkgname}/LICENSE
}
